using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FluentAssertions;
using Xunit;

namespace VocaDb.ResXFileCodeGenerator.Tests.GithubIssues.FeatureRequests;
public class MethodGeneratorTests
{
	[Fact]
	public void Generate_StringBuilder_Name_NotValidIdentifier()
	{
		var text = @"<?xml version=""1.0"" encoding=""utf-8""?>
<root>
  <xsd:schema id=""root"" xmlns="""" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:msdata=""urn:schemas-microsoft-com:xml-msdata"">
    <xsd:import namespace=""http://www.w3.org/XML/1998/namespace"" />
    <xsd:element name=""root"" msdata:IsDataSet=""true"">
      <xsd:complexType>
        <xsd:choice maxOccurs=""unbounded"">
          <xsd:element name=""metadata"">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" />
              </xsd:sequence>
              <xsd:attribute name=""name"" use=""required"" type=""xsd:string"" />
              <xsd:attribute name=""type"" type=""xsd:string"" />
              <xsd:attribute name=""mimetype"" type=""xsd:string"" />
              <xsd:attribute ref=""xml:space"" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name=""assembly"">
            <xsd:complexType>
              <xsd:attribute name=""alias"" type=""xsd:string"" />
              <xsd:attribute name=""name"" type=""xsd:string"" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name=""data"">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""1"" />
                <xsd:element name=""comment"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""2"" />
              </xsd:sequence>
              <xsd:attribute name=""name"" type=""xsd:string"" use=""required"" msdata:Ordinal=""1"" />
              <xsd:attribute name=""type"" type=""xsd:string"" msdata:Ordinal=""3"" />
              <xsd:attribute name=""mimetype"" type=""xsd:string"" msdata:Ordinal=""4"" />
              <xsd:attribute ref=""xml:space"" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name=""resheader"">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""1"" />
              </xsd:sequence>
              <xsd:attribute name=""name"" type=""xsd:string"" use=""required"" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name=""resmimetype"">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name=""version"">
    <value>2.0</value>
  </resheader>
  <resheader name=""reader"">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name=""writer"">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name=""Method1WithTwoParams"" xml:space=""preserve"">
	<value>Parameter1:{0},Parameter2:{1}</value>
  </data>
  <data name=""Method2WithThreeParams"" xml:space=""preserve"">
	<value>Parameter1:{0},Parameter2:{1},Parameter3{2}</value>
  </data>
  <data name=""JustAProperty"" xml:space=""preserve"">
		<value>Plain property with no params</value>
  </data>
</root>";

		var expected = @"// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace VocaDb.Web.App_GlobalResources;
using System.Globalization;
using System.Resources;

public static class CommonMessages
{
    private static ResourceManager? s_resourceManager;
    public static ResourceManager ResourceManager => s_resourceManager ??= new ResourceManager(""VocaDb.Web.App_GlobalResources.CommonMessages"", typeof(CommonMessages).Assembly);
    public static CultureInfo? CultureInfo { get; set; }

    /// <summary>
    /// Looks up a localized string similar to Parameter1:{0},Parameter2:{1}.
    /// </summary>
    public static string? Method1WithTwoParams(object param0, object param1)=> String.Format(CultureInfo, ResourceManager.GetString(""Method1WithTwoParams"", CultureInfo), param0, param1);

    /// <summary>
    /// Looks up a localized string similar to Parameter1:{0},Parameter2:{1},Parameter3{2}.
    /// </summary>
    public static string? Method2WithThreeParams(object param0, object param1, object param2)=> String.Format(CultureInfo, ResourceManager.GetString(""Method2WithThreeParams"", CultureInfo), param0, param1, param2);

    /// <summary>
    /// Looks up a localized string similar to Plain property with no params.
    /// </summary>
    public static string? JustAProperty => ResourceManager.GetString(nameof(JustAProperty), CultureInfo);
}
";
		var generator = new StringBuilderGenerator();
		var source = generator.Generate(
			new FileOptions()
			{
				LocalNamespace = "VocaDb.Web.App_GlobalResources",
				EmbeddedFilename = "VocaDb.Web.App_GlobalResources.CommonMessages",
				CustomToolNamespace = null,
				GroupedFile = new GroupedAdditionalFile(
					mainFile: new AdditionalTextWithHash(new AdditionalTextStub("", text), Guid.NewGuid()),
					subFiles: Array.Empty<AdditionalTextWithHash>()
				),
				ClassName = "CommonMessages",
				PublicClass = true,
				NullForgivingOperators = false,
				StaticClass = true,
				StaticMembers = true
			}
		);
		source.ErrorsAndWarnings.Should().BeNullOrEmpty();
		source.SourceCode.ReplaceLineEndings().Should().Be(expected.ReplaceLineEndings());
	}


}
